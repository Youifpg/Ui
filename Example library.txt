if game:GetService("CoreGui"):FindFirstChild("ToraScript") then
    game:GetService("CoreGui").ToraScript:Destroy()
end

-- Load the library
local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/Alexisisback/Library/refs/heads/main/Library%20toraisme/Script.lua", true))()

-- Create windows
local ExampleWindow = Library:CreateWindow("Main")
local FarmWindow = Library:CreateWindow("Farm")

-- Add a button to toggle the library
ExampleWindow:AddButton({
    text = "Open/Close Library",
    callback = function()
        Library:Close()
    end
})

-- Global variable for speed state
local speedActive = false
local speedValue = 16

-- Functions to manage auto aim
local function SetAim(value)
    if value then
        print("Auto aim activated")
        -- Logic to activate auto aim
    else
        print("Auto aim deactivated")
        -- Logic to deactivate auto aim
    end
end

-- Function to enable speed
local function enableSpeed()
    local player = game.Players.LocalPlayer
    if player and player.Character then
        player.Character.Humanoid.WalkSpeed = speedValue
    end
end

-- Function to reset the player
local function ResetPlayer()
    local player = game.Players.LocalPlayer
    if player and player.Character then
        player.Character:BreakJoints()
        print("Player reset")
    end
end

-- Add options to the main window
ExampleWindow:AddToggle({
    text = "Auto aim",
    flag = "Aim",
    state = false,
    callback = function(value)
        SetAim(value)
    end
})

ExampleWindow:AddLabel({
    text = "This is a sample text",
})

-- List of mobs
local Mobs = {"Goblin", "Orc", "Dragon", "Skeleton", "Vampire"}

ExampleWindow:AddList({
    text = "Select a Mob",
    flag = "mobList",
    value = "::Select a Mob::",
    values = Mobs,
    callback = function(selectedMob)
        print("Selected mob:", selectedMob)

        -- Logic based on the selected mob
        if selectedMob == "Goblin" then
            print("Attacking a Goblin...")
        elseif selectedMob == "Orc" then
            print("Attacking an Orc...")
        elseif selectedMob == "Dragon" then
            print("Attacking a Dragon...")
        elseif selectedMob == "Skeleton" then
            print("Attacking a Skeleton...")
        elseif selectedMob == "Vampire" then
            print("Attacking a Vampire...")
        end
    end
})

-- Add slider for speed
FarmWindow:AddSlider({
    text = "Speed",
    flag = "PlayerSpeedSlider",
    value = 16,
    min = 16,
    max = 100,
    callback = function(value)
        speedValue = value
        if speedActive then
            enableSpeed()
        end
    end
})

-- Add key bind
FarmWindow:AddBind({
    text = "Bind a key",
    key = "W",
    position = 2,
    hold = false,
    callback = function(value)
        print("Key pressed: " .. tostring(value))
    end
})

-- Assuming you already have a created window called 'Window'
FarmWindow:AddBox({
    text = "Stats Value",               -- Title of the box
    flag = "box",                        -- Unique identifier for storing the value
    value = "Set Value",                -- Initial value shown in the box
    callback = function(a)               -- Callback function called when the value changes
        SetStats = a                     -- Assign the entered value to the variable SetStats
        print("New stats value: " .. SetStats) -- Print the new value
    end
})

-- Add color picker
FarmWindow:AddColor({
    text = "Select a color",
    flag = "ColorPicker",
    color = {255, 0, 0}, -- Initial color (Red)
    callback = function(selectedColor)
        print("Selected color: " .. tostring(selectedColor))
        -- Logic to use the selected color
    end
})

-- Add reset button
FarmWindow:AddButton({
    text = "Reset",
    flag = "ResetButton",
    state = false,
    callback = function(value)
        ResetPlayer()
    end
})

-- Add a folder
local MyFolder = ExampleWindow:AddFolder("Settings")

-- Add elements inside the folder
MyFolder:init() -- Initialize the folder to display items

MyFolder:AddToggle({
    text = "Configuration Option",
    flag = "ConfigOption",
    state = false,
    callback = function(value)
        print("Configuration option activated:", value)
    end
})

MyFolder:AddSlider({
    text = "Configuration Adjustment",
    flag = "ConfigSlider",
    value = 50,
    min = 0,
    max = 100,
    callback = function(value)
        print("New adjustment value:", value)
    end
})

-- Initialize the library
Library:Init()
